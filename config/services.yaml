# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
imports:
    - { resource: services/elastic.yml }
    - { resource: services/command.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    index_prefix: '%env(resolve:ELASTIC_INDEX_PREFIX)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $skillStatsRecalculationProducer: '@old_sound_rabbit_mq.skill_stats_recalculation_producer'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\Serializer\Serializer: '@serializer'

    Symfony\Component\Serializer\Normalizer\ArrayDenormalizer:

    App\Normalizer\NormalizerHelper:
        arguments:
            - !service
                class: Symfony\Component\Serializer\Serializer
                arguments:
                    -
                        - '@Symfony\Component\Serializer\Normalizer\ObjectNormalizer'
                        - '@Symfony\Component\Serializer\Normalizer\ArrayDenormalizer'

    App\Repository\Elastic\Config:
        arguments:
            $indexPrefix: '%index_prefix%'

    Faker\Factory:

    Faker\Generator:
        factory: Faker\Factory:create
        arguments: ['cs_CZ']
        calls:
            - [seed, [1234]]

    App\Command\ElasticIndexCommand:
        arguments:
            $repositories: '@fs.elastic.repositories'
